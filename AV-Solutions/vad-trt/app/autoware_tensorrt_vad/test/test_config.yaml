test_config:
  # プラグインとエンジンのパス設定
  plugins_path: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX/AV-Solutions/vad-trt/app/demo/libplugins.so"
  warm_up_num: 0  # テストなのでウォームアップは不要
  
  # エンジンの設定
  nets:
    backbone:
      name: "backbone"
      engine_file: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX/AV-Solutions/vad-trt/app/demo/engines/vadv1.extract_img_feat.fp16.engine"
      use_graph: true
    head:
      name: "head"
      engine_file: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX/AV-Solutions/vad-trt/app/demo/engines/vadv1_prev.pts_bbox_head.forward.engine"
      use_graph: true
      inputs:
        img_feats:
          net: "backbone"
          name: "out.img_feats"
    head_no_prev:
      name: "head_no_prev"
      engine_file: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX/AV-Solutions/vad-trt/app/demo/engines/vadv1.pts_bbox_head.forward.engine"
      use_graph: true
      inputs:
        img_feats:
          net: "backbone"
          name: "out.img_feats"

  # テストデータのパス設定
  test_data:
    # テスト用の入力データ
    input_data:
      bev_embed:
        src_path: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX_ns_rosbag/DL4AGX/AV-Solutions/vad-trt/app/demo/bev_embed_frame1.bin"
        dst_path: "bev_embed_frame1.bin"
      camera_images:
        path: "/home/autoware/ghq/github.com/Shin-kyoto/DL4AGX_ns_rosbag/DL4AGX/AV-Solutions/vad-trt/app/demo/camera_images_frame2.bin"
      shift: [0.00224774843081832, -0.00130402739159763, 0.0]
      lidar2img: [
        379.27642822,  388.46176147,   17.67811966,    0.00000000,
        -6.15190125,  236.73570251, -371.38888550,    0.00000000,
        -0.0121784266084433, 0.998439431190491, 0.0545013546943665, 0.0,
        9.45881329244003e-05, -0.354513853788376, -0.436208814382553, 1.0,
        546.047180175781, -247.578689575195, -15.7638425827026, 0.0,
        152.198425292969, 128.385726928711, -495.723114013672, 0.0,
        0.843259930610657, 0.536481976509094, 0.0331593155860901, 0.0,
        0.038077961653471, -0.331093370914459, -0.613056242465973, 1.0,
        12.5099611282349, 601.254028320312, 31.375207901001, 0.0,
        -155.273300170898, 128.329086303711, -495.084533691406, 0.0,
        -0.823839902877808, 0.565365552902222, 0.0406133532524109, 0.0,
        0.0988269224762917, -0.349612444639206, -0.539402663707733, 1.0,
        -321.558685302734, -340.316497802734, -10.744460105896, 0.0,
        -4.18298482894897, -178.075927734375, -325.981872558594, 0.0,
        -0.00822998490184546, -0.999196469783783, -0.0392249822616577, 0.0,
        0.000492329010739923, -0.280932426452637, -1.01566863059998, 1.0,
        -474.615386962891, 369.318817138672, 21.3022727966309, 0.0,
        -185.020065307617, -40.9742012023926, -501.005340576172, 0.0,
        -0.947597444057465, -0.319451540708542, 0.00308722257614136, 0.0,
        -0.208745241165161, -0.286693632602692, -0.433616310358047, 1.0,
        114.180130004883, -587.687866210938, -23.8854846954346, 0.0,
        178.267059326172, -48.9818115234375, -500.038909912109, 0.0,
        0.92411196231842, -0.382108986377716, -0.0031280517578125, 0.0,
        0.09475177526474, -0.29829341173172, -0.460391998291016, 1.0
      ]
      can_bus: [
        3.6282057762146, -2.17206835746765, 0.0,
        -0.962751805782318, -0.00739681720733643, -0.00615653395652771,
        0.270215272903442, -0.354863733053207, -0.417147159576416,
        9.74510097503662, 0.0086875855922699, 0.0174264013767242,
        -0.0592677667737007, 8.23505878448486, 0.0, 0.0,
        0.0109170079231262, 0.474326103925705
      ]
      command: 2  # Frame 2 was command 2

    # 期待される出力データ
    expected_output:
      trajectory: [
        0.04284074902534485, 4.304573059082031,
        0.1053553968667984, 8.743409156799316,
        0.18814155459403992, 13.293708801269531,
        0.28254231810569763, 17.906057357788086,
        0.38268977403640747, 22.609987258911133,
        0.49197587370872498, 27.344097137451172
      ]
